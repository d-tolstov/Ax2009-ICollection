@startuml "ICollection"

interface Enumerable{
    GetEnumerator() : Enumerator
}

interface ICollection{
    Add(anytype item) : ICollection
    Count() : int
    Contains(anytype item) : boolean
}
Enumerable <|-- ICollection

class SysSet{
    GetEnumerator() : SetEnumerator
    Add(anytype item) : SysSet
}
ICollection <|.. SysSet

class Set{
}
SysSet o-- Set

class SetEnumerator{
}
SysSet o-- SetEnumerator

class SysList{
    GetEnumerator() : ListEnumerator
    Add(anytype item) : SysList
}
ICollection <|.. SysList

class ListEnumerator{
}
SysList o-- ListEnumerator

class List{
}
SysList o-- List

interface Enumerator{
}
SetEnumerator ..|> Enumerator
ListEnumerator ..|> Enumerator

class SysListCLR{
    GetEnumerator() : SysEnumerator_SystemCollection
    Add(anytype item) : SysListCLR
}
ICollection <|.. SysListCLR

class SysEnumerator_SystemCollection{
}
SysListCLR o-- SysEnumerator_SystemCollection

interface ISysEnumerator{
}
SysEnumerator_SystemCollection ..|> ISysEnumerator
ISysEnumerator --|> Enumerator

package System.Collections.Generic{
    class List(T){
    }
    SysListCLR o-- "List(T)"
}

@enduml